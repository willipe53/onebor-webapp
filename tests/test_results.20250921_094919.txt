üöÄ onebor Comprehensive API Test Suite
Testing all functionality with detailed coverage analysis
Started at: 2025-09-21 09:49:19

üìã Test Plan:
   ‚Ä¢ New functionality tests: 5 files
   ‚Ä¢ Regression tests: 6 files
   ‚Ä¢ Total tests: 11 files

============================================================
üß™ Running test_invitations.py
============================================================
‚è±Ô∏è  Duration: 20.19s
‚ùå test_invitations.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 9 items

test_invitations.py::TestInvitations::test_create_invitation_simplified_schema PASSED [ 11%]
test_invitations.py::TestInvitations::test_get_invitations_by_client_group FAILED [ 22%]
test_invitations.py::TestInvitations::test_get_invitation_by_code PASSED [ 33%]
test_invitations.py::TestInvitations::test_expire_invitation_via_redeem FAILED [ 44%]
test_invitations.py::TestInvitations::test_invitation_count_api FAILED   [ 55%]
test_invitations.py::TestInvitations::test_invitation_cors_headers PASSED [ 66%]
test_invitations.py::TestInvitations::test_invitation_validation_errors PASSED [ 77%]
test_invitations.py::TestInvitations::test_invitation_auto_generated_fields FAILED [ 88%]
test_invitations.py::TestInvitations::test_invitation_expires_at_format FAILED [100%]

=================================== FAILURES ===================================
_____________ TestInvitations.test_get_invitations_by_client_group _____________
test_invitations.py:53: in test_get_invitations_by_client_group
    client_group_id = invitation['client_group_id']
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'client_group_id'
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 124: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
______________ TestInvitations.test_expire_invitation_via_redeem _______________
test_invitations.py:101: in test_expire_invitation_via_redeem
    original_expires_at = invitation['expires_at']
                          ^^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'expires_at'
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 126: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
__________________ TestInvitations.test_invitation_count_api ___________________
test_invitations.py:155: in test_invitation_count_api
    self.assert_success_response(invitation1)
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 127: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
____________ TestInvitations.test_invitation_auto_generated_fields _____________
test_invitations.py:240: in test_invitation_auto_generated_fields
    invitation = self.assert_success_response(response)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 128: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
______________ TestInvitations.test_invitation_expires_at_format _______________
test_invitations.py:259: in test_invitation_expires_at_format
    expires_at = invitation['expires_at']
                 ^^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'expires_at'
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 129: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
=============================== warnings summary ===============================
test_invitations.py::TestInvitations::test_create_invitation_simplified_schema
test_invitations.py::TestInvitations::test_get_invitations_by_client_group
test_invitations.py::TestInvitations::test_get_invitation_by_code
test_invitations.py::TestInvitations::test_expire_invitation_via_redeem
test_invitations.py::TestInvitations::test_invitation_count_api
test_invitations.py::TestInvitations::test_invitation_cors_headers
test_invitations.py::TestInvitations::test_invitation_validation_errors
test_invitations.py::TestInvitations::test_invitation_auto_generated_fields
test_invitations.py::TestInvitations::test_invitation_expires_at_format
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

test_invitations.py::TestInvitations::test_create_invitation_simplified_schema
test_invitations.py::TestInvitations::test_get_invitations_by_client_group
test_invitations.py::TestInvitations::test_get_invitation_by_code
test_invitations.py::TestInvitations::test_expire_invitation_via_redeem
test_invitations.py::TestInvitations::test_invitation_expires_at_format
  /Users/willipe/github/onebor-webapp/tests/test_invitations.py:26: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    expires_at = (datetime.utcnow() + timedelta(days=7)

test_invitations.py::TestInvitations::test_create_invitation_simplified_schema
  /opt/homebrew/lib/python3.13/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but test_invitations.py::TestInvitations::test_create_invitation_simplified_schema returned <class 'dict'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_invitations.py::TestInvitations::test_get_invitations_by_client_group
FAILED test_invitations.py::TestInvitations::test_expire_invitation_via_redeem
FAILED test_invitations.py::TestInvitations::test_invitation_count_api - Asse...
FAILED test_invitations.py::TestInvitations::test_invitation_auto_generated_fields
FAILED test_invitations.py::TestInvitations::test_invitation_expires_at_format
================== 5 failed, 4 passed, 15 warnings in 19.97s ===================

STDERR: 

============================================================
üß™ Running test_client_group_entities.py
============================================================
‚è±Ô∏è  Duration: 19.64s
‚ùå test_client_group_entities.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 10 items

test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_add_all ERROR [ 10%]
test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_partial_update ERROR [ 20%]
test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_empty_list ERROR [ 30%]
test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_idempotent ERROR [ 40%]
test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_nonexistent_entity ERROR [ 50%]
test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_validation ERROR [ 60%]
test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_transaction_safety ERROR [ 70%]
test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_cors_headers ERROR [ 80%]
test_client_group_entities.py::TestClientGroupEntities::test_query_client_group_entities_api ERROR [ 90%]
test_client_group_entities.py::TestClientGroupEntities::test_bulk_entity_operations_performance ERROR [100%]

==================================== ERRORS ====================================
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_add_all _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_partial_update _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_empty_list _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_idempotent _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_nonexistent_entity _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_validation _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_transaction_safety _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_cors_headers _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_query_client_group_entities_api _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
_ ERROR at setup of TestClientGroupEntities.test_bulk_entity_operations_performance _
test_client_group_entities.py:22: in setup_method
    self.test_entity_type = self.create_entity_type(
base_test.py:257: in create_entity_type
    result = self.assert_success_response(response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
=============================== warnings summary ===============================
test_client_group_entities.py: 10 warnings
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_add_all
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_partial_update
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_empty_list
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_idempotent
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_nonexistent_entity
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_validation
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_transaction_safety
ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_cors_headers
ERROR test_client_group_entities.py::TestClientGroupEntities::test_query_client_group_entities_api
ERROR test_client_group_entities.py::TestClientGroupEntities::test_bulk_entity_operations_performance
======================= 10 warnings, 10 errors in 19.44s =======================

STDERR: 

============================================================
üß™ Running test_count_apis.py
============================================================
‚è±Ô∏è  Duration: 35.95s
‚ùå test_count_apis.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 12 items

test_count_apis.py::TestCountAPIs::test_entity_count_api FAILED          [  8%]
test_count_apis.py::TestCountAPIs::test_entity_count_with_filters PASSED [ 16%]
test_count_apis.py::TestCountAPIs::test_user_count_api PASSED            [ 25%]
test_count_apis.py::TestCountAPIs::test_client_group_count_api PASSED    [ 33%]
test_count_apis.py::TestCountAPIs::test_entity_type_count_api PASSED     [ 41%]
test_count_apis.py::TestCountAPIs::test_invitation_count_api FAILED      [ 50%]
test_count_apis.py::TestCountAPIs::test_count_vs_full_data_consistency PASSED [ 58%]
test_count_apis.py::TestCountAPIs::test_count_performance PASSED         [ 66%]
test_count_apis.py::TestCountAPIs::test_count_parameter_validation PASSED [ 75%]
test_count_apis.py::TestCountAPIs::test_count_with_access_control PASSED [ 83%]
test_count_apis.py::TestCountAPIs::test_count_api_cors_headers PASSED    [ 91%]
test_count_apis.py::TestCountAPIs::test_count_edge_cases PASSED          [100%]

=================================== FAILURES ===================================
_____________________ TestCountAPIs.test_entity_count_api ______________________
test_count_apis.py:48: in test_entity_count_api
    final_count = self.assert_success_response(response)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "user_id is required for data protection"}
___________________ TestCountAPIs.test_invitation_count_api ____________________
test_count_apis.py:162: in test_invitation_count_api
    invitation = self.assert_success_response(response)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 142: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
=============================== warnings summary ===============================
test_count_apis.py: 12 warnings
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_count_apis.py::TestCountAPIs::test_entity_count_api - AssertionEr...
FAILED test_count_apis.py::TestCountAPIs::test_invitation_count_api - Asserti...
================== 2 failed, 10 passed, 12 warnings in 35.73s ==================

STDERR: 

============================================================
üß™ Running test_schema_changes.py
============================================================
‚è±Ô∏è  Duration: 23.62s
‚ùå test_schema_changes.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 12 items

test_schema_changes.py::TestSchemaChanges::test_user_id_is_integer PASSED [  8%]
test_schema_changes.py::TestSchemaChanges::test_user_sub_field_required PASSED [ 16%]
test_schema_changes.py::TestSchemaChanges::test_user_creation_without_sub_fails PASSED [ 25%]
test_schema_changes.py::TestSchemaChanges::test_user_creation_without_email_fails PASSED [ 33%]
test_schema_changes.py::TestSchemaChanges::test_user_lookup_by_sub PASSED [ 41%]
test_schema_changes.py::TestSchemaChanges::test_user_update_preserves_sub PASSED [ 50%]
test_schema_changes.py::TestSchemaChanges::test_invitations_simplified_schema FAILED [ 58%]
test_schema_changes.py::TestSchemaChanges::test_invitation_expiration_mechanism FAILED [ 66%]
test_schema_changes.py::TestSchemaChanges::test_client_group_user_relationships_with_int_user_id PASSED [ 75%]
test_schema_changes.py::TestSchemaChanges::test_entity_operations_with_int_user_id FAILED [ 83%]
test_schema_changes.py::TestSchemaChanges::test_data_type_consistency PASSED [ 91%]
test_schema_changes.py::TestSchemaChanges::test_backward_compatibility_handling PASSED [100%]

=================================== FAILURES ===================================
_____________ TestSchemaChanges.test_invitations_simplified_schema _____________
test_schema_changes.py:159: in test_invitations_simplified_schema
    invitation = self.assert_success_response(response)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 143: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
____________ TestSchemaChanges.test_invitation_expiration_mechanism ____________
test_schema_changes.py:185: in test_invitation_expiration_mechanism
    invitation = self.assert_success_response(response)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 144: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
__________ TestSchemaChanges.test_entity_operations_with_int_user_id ___________
test_schema_changes.py:274: in test_entity_operations_with_int_user_id
    entity_result = self.assert_success_response(response)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "client_group_id is required for creating new entities"}
=============================== warnings summary ===============================
test_schema_changes.py: 12 warnings
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_schema_changes.py::TestSchemaChanges::test_invitations_simplified_schema
FAILED test_schema_changes.py::TestSchemaChanges::test_invitation_expiration_mechanism
FAILED test_schema_changes.py::TestSchemaChanges::test_entity_operations_with_int_user_id
================== 3 failed, 9 passed, 12 warnings in 23.40s ===================

STDERR: 

============================================================
üß™ Running test_cors_comprehensive.py
============================================================
‚è±Ô∏è  Duration: 9.69s
‚ùå test_cors_comprehensive.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 10 items

test_cors_comprehensive.py::TestCORSComprehensive::test_options_preflight_all_endpoints FAILED [ 10%]
test_cors_comprehensive.py::TestCORSComprehensive::test_post_cors_headers_all_endpoints FAILED [ 20%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_origin_specificity PASSED [ 30%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_credentials_support FAILED [ 40%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_headers_format PASSED [ 50%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_error_responses PASSED [ 60%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_complex_preflight PASSED [ 70%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_max_age_header PASSED [ 80%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_all_http_methods FAILED [ 90%]
test_cors_comprehensive.py::TestCORSComprehensive::test_cors_performance PASSED [100%]

=================================== FAILURES ===================================
__________ TestCORSComprehensive.test_options_preflight_all_endpoints __________
test_cors_comprehensive.py:46: in test_options_preflight_all_endpoints
    with self.subTest(endpoint=endpoint):
         ^^^^^^^^^^^^
E   AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
__________ TestCORSComprehensive.test_post_cors_headers_all_endpoints __________
test_cors_comprehensive.py:82: in test_post_cors_headers_all_endpoints
    with self.subTest(endpoint=endpoint):
         ^^^^^^^^^^^^
E   AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
_____________ TestCORSComprehensive.test_cors_credentials_support ______________
test_cors_comprehensive.py:132: in test_cors_credentials_support
    with self.subTest(endpoint=endpoint):
         ^^^^^^^^^^^^
E   AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
_______________ TestCORSComprehensive.test_cors_all_http_methods _______________
test_cors_comprehensive.py:252: in test_cors_all_http_methods
    with self.subTest(method=method):
         ^^^^^^^^^^^^
E   AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
=============================== warnings summary ===============================
test_cors_comprehensive.py: 10 warnings
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_options_preflight_all_endpoints
FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_post_cors_headers_all_endpoints
FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_cors_credentials_support
FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_cors_all_http_methods
=================== 4 failed, 6 passed, 10 warnings in 9.51s ===================

STDERR: 

============================================================
üß™ Running test_users.py
============================================================
‚è±Ô∏è  Duration: 19.85s
‚ùå test_users.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 8 items

test_users.py::TestUsers::test_user_update_and_revert FAILED             [ 12%]
test_users.py::TestUsers::test_user_create_and_delete_cycle FAILED       [ 25%]
test_users.py::TestUsers::test_user_get_with_filters FAILED              [ 37%]
test_users.py::TestUsers::test_user_update_validation FAILED             [ 50%]
test_users.py::TestUsers::test_user_upsert_behavior FAILED               [ 62%]
test_users.py::TestUsers::test_user_delete_with_constraints FAILED       [ 75%]
test_users.py::TestUsers::test_user_multiple_operations FAILED           [ 87%]
test_users.py::TestUsers::test_user_preferences_and_primary_client_group FAILED [100%]

=================================== FAILURES ===================================
____________________ TestUsers.test_user_update_and_revert _____________________
test_users.py:24: in test_user_update_and_revert
    original_name = test_user['name']
                    ^^^^^^^^^^^^^^^^^
E   KeyError: 'name'
_________________ TestUsers.test_user_create_and_delete_cycle __________________
test_users.py:79: in test_user_create_and_delete_cycle
    assert len(
E   AssertionError: Expected 1 user with ID 'test_user_20250921_095110'
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095110_test_user_20250921_095110: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095110_test_user_20250921_095110 not found"}
_____________________ TestUsers.test_user_get_with_filters _____________________
test_users.py:129: in test_user_get_with_filters
    assert len(
E   AssertionError: Expected 1 user for ID filter, got 0
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095112_filter_test_20250921_095112: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095112_filter_test_20250921_095112 not found"}
____________________ TestUsers.test_user_update_validation _____________________
test_users.py:191: in test_user_update_validation
    update_result = self.update_user(test_user_id, email=new_email)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:248: in update_user
    return self.assert_success_response(response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "sub and email are required for new users"}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095115_update_test_20250921_095115: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095115_update_test_20250921_095115 not found"}
_____________________ TestUsers.test_user_upsert_behavior ______________________
test_users.py:250: in test_user_upsert_behavior
    assert len(users) == 1, "User should be created"
E   AssertionError: User should be created
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095117_upsert_test_20250921_095117: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095117_upsert_test_20250921_095117 not found"}
_________________ TestUsers.test_user_delete_with_constraints __________________
test_users.py:308: in test_user_delete_with_constraints
    delete_result = self.delete_record(test_user_id, "User")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:372: in delete_record
    return self.assert_success_response(response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 404: {"error": "User with ID constraint_user_20250921_095119 not found"}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095119_constraint_user_20250921_095119: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095119_constraint_user_20250921_095119 not found"}
Warning: Failed to cleanup client group 146: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
___________________ TestUsers.test_user_multiple_operations ____________________
test_users.py:344: in test_user_multiple_operations
    assert found, f"User {user_data['user_id']} should exist with correct data"
E   AssertionError: User multi_user_0_20250921_095123 should exist with correct data
E   assert False
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095123_multi_user_0_20250921_095123: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095123_multi_user_0_20250921_095123 not found"}
Warning: Failed to cleanup user TESTNEW20250921_095124_multi_user_1_20250921_095123: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095124_multi_user_1_20250921_095123 not found"}
Warning: Failed to cleanup user TESTNEW20250921_095124_multi_user_2_20250921_095123: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095124_multi_user_2_20250921_095123 not found"}
___________ TestUsers.test_user_preferences_and_primary_client_group ___________
test_users.py:413: in test_user_preferences_and_primary_client_group
    response = self.api_call("/update_user", {
               ^^^^^^^^^^^^^
E   AttributeError: 'TestUsers' object has no attribute 'api_call'

During handling of the above exception, another exception occurred:
test_users.py:514: in test_user_preferences_and_primary_client_group
    response = self.api_call("/update_user", restore_data)
               ^^^^^^^^^^^^^
E   AttributeError: 'TestUsers' object has no attribute 'api_call'
=============================== warnings summary ===============================
test_users.py::TestUsers::test_user_update_and_revert
test_users.py::TestUsers::test_user_create_and_delete_cycle
test_users.py::TestUsers::test_user_get_with_filters
test_users.py::TestUsers::test_user_update_validation
test_users.py::TestUsers::test_user_upsert_behavior
test_users.py::TestUsers::test_user_delete_with_constraints
test_users.py::TestUsers::test_user_multiple_operations
test_users.py::TestUsers::test_user_preferences_and_primary_client_group
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_users.py::TestUsers::test_user_update_and_revert - KeyError: 'name'
FAILED test_users.py::TestUsers::test_user_create_and_delete_cycle - Assertio...
FAILED test_users.py::TestUsers::test_user_get_with_filters - AssertionError:...
FAILED test_users.py::TestUsers::test_user_update_validation - AssertionError...
FAILED test_users.py::TestUsers::test_user_upsert_behavior - AssertionError: ...
FAILED test_users.py::TestUsers::test_user_delete_with_constraints - Assertio...
FAILED test_users.py::TestUsers::test_user_multiple_operations - AssertionErr...
FAILED test_users.py::TestUsers::test_user_preferences_and_primary_client_group
======================== 8 failed, 8 warnings in 19.68s ========================

STDERR: 

============================================================
üß™ Running test_client_groups.py
============================================================
‚è±Ô∏è  Duration: 26.52s
‚ùå test_client_groups.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 8 items

test_client_groups.py::TestClientGroups::test_client_group_update_and_revert PASSED [ 12%]
test_client_groups.py::TestClientGroups::test_client_group_create_and_delete_cycle FAILED [ 25%]
test_client_groups.py::TestClientGroups::test_client_group_get_with_filters FAILED [ 37%]
test_client_groups.py::TestClientGroups::test_client_group_get_by_user_id FAILED [ 50%]
test_client_groups.py::TestClientGroups::test_client_group_update_validation PASSED [ 62%]
test_client_groups.py::TestClientGroups::test_client_group_delete_with_constraints FAILED [ 75%]
test_client_groups.py::TestClientGroups::test_client_group_multiple_operations FAILED [ 87%]
test_client_groups.py::TestClientGroups::test_client_group_preferences FAILED [100%]

=================================== FAILURES ===================================
__________ TestClientGroups.test_client_group_create_and_delete_cycle __________
test_client_groups.py:74: in test_client_group_create_and_delete_cycle
    assert len(
E   AssertionError: Expected at least 1 group with name 'CLIENT_GROUP_20250921_095131'
E   assert 0 >= 1
E    +  where 0 = len([])
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 147: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
_____________ TestClientGroups.test_client_group_get_with_filters ______________
test_client_groups.py:125: in test_client_group_get_with_filters
    assert len(
E   AssertionError: Expected at least 1 group for name filter, got 0
E   assert 0 >= 1
E    +  where 0 = len([])
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 148: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
______________ TestClientGroups.test_client_group_get_by_user_id _______________
test_client_groups.py:175: in test_client_group_get_by_user_id
    assert len(
E   AssertionError: Expected at least 1 group for user, got 0
E   assert 0 >= 1
E    +  where 0 = len([])
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095137_test_user_20250921_095137: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095137_test_user_20250921_095137 not found"}
Warning: Failed to cleanup client group 149: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
__________ TestClientGroups.test_client_group_delete_with_constraints __________
test_client_groups.py:274: in test_client_group_delete_with_constraints
    delete_result = self.delete_record(group_id, "Client Group")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:372: in delete_record
    return self.assert_success_response(response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095145_constraint_user_20250921_095145: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095145_constraint_user_20250921_095145 not found"}
Warning: Failed to cleanup client group 151: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
____________ TestClientGroups.test_client_group_multiple_operations ____________
test_client_groups.py:299: in test_client_group_multiple_operations
    assert found, f"Group {group_id} with name {group_names[i]} should exist"
E   AssertionError: Group 152 with name MULTI_TEST_0_20250921_095150 should exist
E   assert False
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup client group 152: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
Warning: Failed to cleanup client group 153: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
Warning: Failed to cleanup client group 154: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
________________ TestClientGroups.test_client_group_preferences ________________
test_client_groups.py:369: in test_client_group_preferences
    response = self.api_call("/update_client_group", {
               ^^^^^^^^^^^^^
E   AttributeError: 'TestClientGroups' object has no attribute 'api_call'

During handling of the above exception, another exception occurred:
test_client_groups.py:448: in test_client_group_preferences
    response = self.api_call("/update_client_group", {
               ^^^^^^^^^^^^^
E   AttributeError: 'TestClientGroups' object has no attribute 'api_call'
=============================== warnings summary ===============================
test_client_groups.py::TestClientGroups::test_client_group_update_and_revert
test_client_groups.py::TestClientGroups::test_client_group_create_and_delete_cycle
test_client_groups.py::TestClientGroups::test_client_group_get_with_filters
test_client_groups.py::TestClientGroups::test_client_group_get_by_user_id
test_client_groups.py::TestClientGroups::test_client_group_update_validation
test_client_groups.py::TestClientGroups::test_client_group_delete_with_constraints
test_client_groups.py::TestClientGroups::test_client_group_multiple_operations
test_client_groups.py::TestClientGroups::test_client_group_preferences
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_client_groups.py::TestClientGroups::test_client_group_create_and_delete_cycle
FAILED test_client_groups.py::TestClientGroups::test_client_group_get_with_filters
FAILED test_client_groups.py::TestClientGroups::test_client_group_get_by_user_id
FAILED test_client_groups.py::TestClientGroups::test_client_group_delete_with_constraints
FAILED test_client_groups.py::TestClientGroups::test_client_group_multiple_operations
FAILED test_client_groups.py::TestClientGroups::test_client_group_preferences
=================== 6 failed, 2 passed, 8 warnings in 26.34s ===================

STDERR: 

============================================================
üß™ Running test_entities.py
============================================================
‚è±Ô∏è  Duration: 29.42s
‚ùå test_entities.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 6 items

test_entities.py::TestEntities::test_entity_update_and_revert FAILED     [ 16%]
test_entities.py::TestEntities::test_entity_create_and_delete_cycle FAILED [ 33%]
test_entities.py::TestEntities::test_entity_get_with_filters FAILED      [ 50%]
test_entities.py::TestEntities::test_entity_parent_child_relationships PASSED [ 66%]
test_entities.py::TestEntities::test_entity_attributes_operations FAILED [ 83%]
test_entities.py::TestEntities::test_entity_multiple_operations FAILED   [100%]

=================================== FAILURES ===================================
__________________ TestEntities.test_entity_update_and_revert __________________
test_entities.py:52: in test_entity_update_and_revert
    self.update_entity(entity_id, name=test_name,
base_test.py:363: in update_entity
    return self.assert_success_response(response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "user_id is required for data protection"}
_______________ TestEntities.test_entity_create_and_delete_cycle _______________
test_entities.py:117: in test_entity_create_and_delete_cycle
    assert created_entity['name'] == test_name, "Entity name should match"
E   AssertionError: Entity name should match
E   assert 'TESTNEW20250...250921_095158' == 'ENTITY_20250921_095158'
E     
E     - ENTITY_20250921_095158
E     + TESTNEW20250921_095158_ENTITY_20250921_095158
__________________ TestEntities.test_entity_get_with_filters ___________________
test_entities.py:179: in test_entity_get_with_filters
    assert len(
E   AssertionError: Expected at least 1 entity for name filter, got 0
E   assert 0 >= 1
E    +  where 0 = len([])
________________ TestEntities.test_entity_attributes_operations ________________
test_entities.py:296: in test_entity_attributes_operations
    self.update_entity(entity_id, attributes=updated_attributes)
base_test.py:363: in update_entity
    return self.assert_success_response(response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
base_test.py:117: in assert_success_response
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: Expected 200, got 400: {"error": "user_id is required for data protection"}
_________________ TestEntities.test_entity_multiple_operations _________________
test_entities.py:379: in test_entity_multiple_operations
    assert found, f"Entity {entity_data['id']} with name {entity_data['name']} should exist"
E   AssertionError: Entity 571 with name MULTI_ENTITY_0_20250921_095218 should exist
E   assert False
=============================== warnings summary ===============================
test_entities.py::TestEntities::test_entity_update_and_revert
test_entities.py::TestEntities::test_entity_create_and_delete_cycle
test_entities.py::TestEntities::test_entity_get_with_filters
test_entities.py::TestEntities::test_entity_parent_child_relationships
test_entities.py::TestEntities::test_entity_attributes_operations
test_entities.py::TestEntities::test_entity_multiple_operations
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_entities.py::TestEntities::test_entity_update_and_revert - Assert...
FAILED test_entities.py::TestEntities::test_entity_create_and_delete_cycle - ...
FAILED test_entities.py::TestEntities::test_entity_get_with_filters - Asserti...
FAILED test_entities.py::TestEntities::test_entity_attributes_operations - As...
FAILED test_entities.py::TestEntities::test_entity_multiple_operations - Asse...
=================== 5 failed, 1 passed, 6 warnings in 29.20s ===================

STDERR: 

============================================================
üß™ Running test_entity_types.py
============================================================
‚è±Ô∏è  Duration: 69.24s
‚ùå test_entity_types.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 10 items

test_entity_types.py::TestEntityTypes::test_entity_type_short_label_and_color_update PASSED [ 10%]
test_entity_types.py::TestEntityTypes::test_entity_type_create_with_new_fields PASSED [ 20%]
test_entity_types.py::TestEntityTypes::test_entity_type_field_validation FAILED [ 30%]
test_entity_types.py::TestEntityTypes::test_entity_type_update_and_revert PASSED [ 40%]
test_entity_types.py::TestEntityTypes::test_entity_type_create_and_delete_cycle PASSED [ 50%]
test_entity_types.py::TestEntityTypes::test_entity_type_schema_validation PASSED [ 60%]
test_entity_types.py::TestEntityTypes::test_entity_type_get_operations PASSED [ 70%]
test_entity_types.py::TestEntityTypes::test_entity_type_update_validation PASSED [ 80%]
test_entity_types.py::TestEntityTypes::test_entity_type_delete_with_constraints PASSED [ 90%]
test_entity_types.py::TestEntityTypes::test_entity_type_multiple_operations PASSED [100%]

=================================== FAILURES ===================================
______________ TestEntityTypes.test_entity_type_field_validation _______________
test_entity_types.py:205: in test_entity_type_field_validation
    assert updated_type.get(
E   AssertionError: Should handle 10-character short_label
E   assert 'TESTM' == 'TESTMAXLEN'
E     
E     - TESTMAXLEN
E     + TESTM
=============================== warnings summary ===============================
test_entity_types.py: 10 warnings
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_entity_types.py::TestEntityTypes::test_entity_type_field_validation
============= 1 failed, 9 passed, 10 warnings in 69.01s (0:01:09) ==============

STDERR: 

============================================================
üß™ Running test_client_group_membership.py
============================================================
‚è±Ô∏è  Duration: 36.98s
‚ùå test_client_group_membership.py FAILED
STDOUT: ============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.2, pluggy-1.6.0 -- /opt/homebrew/opt/python@3.13/bin/python3.13
cachedir: .pytest_cache
rootdir: /Users/willipe/github/onebor-webapp/tests
configfile: pytest.ini
collecting ... collected 8 items

test_client_group_membership.py::TestClientGroupMembership::test_add_remove_user_membership_cycle FAILED [ 12%]
test_client_group_membership.py::TestClientGroupMembership::test_add_user_already_in_group FAILED [ 25%]
test_client_group_membership.py::TestClientGroupMembership::test_remove_user_not_in_group PASSED [ 37%]
test_client_group_membership.py::TestClientGroupMembership::test_membership_action_variations FAILED [ 50%]
test_client_group_membership.py::TestClientGroupMembership::test_invalid_membership_actions PASSED [ 62%]
test_client_group_membership.py::TestClientGroupMembership::test_membership_with_nonexistent_resources FAILED [ 75%]
test_client_group_membership.py::TestClientGroupMembership::test_multiple_users_single_group FAILED [ 87%]
test_client_group_membership.py::TestClientGroupMembership::test_single_user_multiple_groups FAILED [100%]

=================================== FAILURES ===================================
_______ TestClientGroupMembership.test_add_remove_user_membership_cycle ________
test_client_group_membership.py:34: in test_add_remove_user_membership_cycle
    assert len(
E   AssertionError: User should be in at least 1 group after addition
E   assert 0 >= 1
E    +  where 0 = len([])
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095334_membership_user_20250921_095334: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095334_membership_user_20250921_095334 not found"}
Warning: Failed to cleanup client group 155: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
___________ TestClientGroupMembership.test_add_user_already_in_group ___________
test_client_group_membership.py:73: in test_add_user_already_in_group
    assert found_group, "User should be in group after first addition"
E   AssertionError: User should be in group after first addition
E   assert False
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095338_duplicate_user_20250921_095338: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095338_duplicate_user_20250921_095338 not found"}
Warning: Failed to cleanup client group 156: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
_________ TestClientGroupMembership.test_membership_action_variations __________
test_client_group_membership.py:142: in test_membership_action_variations
    assert found_group, "User should be in group after insert"
E   AssertionError: User should be in group after insert
E   assert False
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095346_variation_user_20250921_095346: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095346_variation_user_20250921_095346 not found"}
Warning: Failed to cleanup client group 158: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
_____ TestClientGroupMembership.test_membership_with_nonexistent_resources _____
test_client_group_membership.py:263: in test_membership_with_nonexistent_resources
    pytest.fail(
E   Failed: Should not succeed with both fake group and fake user
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095354_real_user_20250921_095354: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095354_real_user_20250921_095354 not found"}
Warning: Failed to cleanup client group 160: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
__________ TestClientGroupMembership.test_multiple_users_single_group __________
test_client_group_membership.py:297: in test_multiple_users_single_group
    assert found_group, f"User {user_id} should be in group {group_id}"
E   AssertionError: User multi_user_0_20250921_095359 should be in group 161
E   assert False
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095359_multi_user_0_20250921_095359: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095359_multi_user_0_20250921_095359 not found"}
Warning: Failed to cleanup user TESTNEW20250921_095359_multi_user_1_20250921_095359: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095359_multi_user_1_20250921_095359 not found"}
Warning: Failed to cleanup user TESTNEW20250921_095359_multi_user_2_20250921_095359: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095359_multi_user_2_20250921_095359 not found"}
Warning: Failed to cleanup client group 161: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
__________ TestClientGroupMembership.test_single_user_multiple_groups __________
test_client_group_membership.py:339: in test_single_user_multiple_groups
    assert group_id in user_group_ids, f"User should be in group {group_id}"
E   AssertionError: User should be in group 162
E   assert 162 in []
--------------------------- Captured stdout teardown ---------------------------
Warning: Failed to cleanup user TESTNEW20250921_095404_single_user_20250921_095404: Expected 200, got 404: {"error": "User with ID TESTNEW20250921_095404_single_user_20250921_095404 not found"}
Warning: Failed to cleanup client group 162: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
Warning: Failed to cleanup client group 163: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
Warning: Failed to cleanup client group 164: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
=============================== warnings summary ===============================
test_client_group_membership.py::TestClientGroupMembership::test_add_remove_user_membership_cycle
test_client_group_membership.py::TestClientGroupMembership::test_add_user_already_in_group
test_client_group_membership.py::TestClientGroupMembership::test_remove_user_not_in_group
test_client_group_membership.py::TestClientGroupMembership::test_membership_action_variations
test_client_group_membership.py::TestClientGroupMembership::test_invalid_membership_actions
test_client_group_membership.py::TestClientGroupMembership::test_membership_with_nonexistent_resources
test_client_group_membership.py::TestClientGroupMembership::test_multiple_users_single_group
test_client_group_membership.py::TestClientGroupMembership::test_single_user_multiple_groups
  /opt/homebrew/lib/python3.13/site-packages/botocore/auth.py:425: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    datetime_now = datetime.datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_client_group_membership.py::TestClientGroupMembership::test_add_remove_user_membership_cycle
FAILED test_client_group_membership.py::TestClientGroupMembership::test_add_user_already_in_group
FAILED test_client_group_membership.py::TestClientGroupMembership::test_membership_action_variations
FAILED test_client_group_membership.py::TestClientGroupMembership::test_membership_with_nonexistent_resources
FAILED test_client_group_membership.py::TestClientGroupMembership::test_multiple_users_single_group
FAILED test_client_group_membership.py::TestClientGroupMembership::test_single_user_multiple_groups
=================== 6 failed, 2 passed, 8 warnings in 36.74s ===================

STDERR: 

============================================================
üß™ Running test_valid_entities.py
============================================================
‚è±Ô∏è  Duration: 34.59s
‚úÖ test_valid_entities.py PASSED

============================================================
üìä TEST SUMMARY REPORT
============================================================
üéØ Total Duration: 325.7s
‚úÖ Passed: 1
‚ùå Failed: 10
‚ö†Ô∏è  Skipped: 0
üìà Success Rate: 9.1%

üÜï New Functionality Coverage:
   Tests: 0/5 passing
   Coverage: 0.0%

üîÑ Regression Testing:
   Tests: 1/6 passing
   Coverage: 16.7%

üìã Detailed Results:

üÜï New Functionality Tests:
   ‚ùå test_invitations.py
   ‚ùå test_client_group_entities.py
   ‚ùå test_count_apis.py
   ‚ùå test_schema_changes.py
   ‚ùå test_cors_comprehensive.py

üîÑ Regression Tests:
   ‚ùå test_users.py
   ‚ùå test_client_groups.py
   ‚ùå test_entities.py
   ‚ùå test_entity_types.py
   ‚ùå test_client_group_membership.py
   ‚úÖ test_valid_entities.py

‚ùå Failed Tests:
   ‚Ä¢ test_invitations.py
   ‚Ä¢ test_client_group_entities.py
   ‚Ä¢ test_count_apis.py
   ‚Ä¢ test_schema_changes.py
   ‚Ä¢ test_cors_comprehensive.py
   ‚Ä¢ test_users.py
   ‚Ä¢ test_client_groups.py
   ‚Ä¢ test_entities.py
   ‚Ä¢ test_entity_types.py
   ‚Ä¢ test_client_group_membership.py

To debug failed tests, run:
   python -m pytest tests/test_invitations.py -v
   python -m pytest tests/test_client_group_entities.py -v
   python -m pytest tests/test_count_apis.py -v
   python -m pytest tests/test_schema_changes.py -v
   python -m pytest tests/test_cors_comprehensive.py -v
   python -m pytest tests/test_users.py -v
   python -m pytest tests/test_client_groups.py -v
   python -m pytest tests/test_entities.py -v
   python -m pytest tests/test_entity_types.py -v
   python -m pytest tests/test_client_group_membership.py -v

üí° Coverage Recommendations:
   ‚úÖ Invitation Management: Simplified schema, expiration, count APIs
   ‚úÖ Client Group Entities: Bulk entity assignment and management
   ‚úÖ Count APIs: Performance optimized counting across all resources
   ‚úÖ Database Schema: Integer user IDs, sub field, simplified invitations
   ‚úÖ CORS Configuration: Comprehensive cross-origin support
   ‚ö†Ô∏è  UI Component Testing: React components need frontend testing
   ‚ö†Ô∏è  Integration Testing: End-to-end workflow testing
   ‚ö†Ô∏è  Performance Testing: Load testing for bulk operations

üéâ Test run completed!
‚ùå Some tests failed. Please review and fix issues.
