cd 🚀 Simple Test Runner
==================================================
📝 Saving output to: test_results.20250921_110014.txt
⏰ Started at: 2025-09-21 11:00:14

📁 Checking directory...
✅ Running from tests directory: /Users/willipe/github/onebor-webapp/tests

📄 Checking .env file...
✅ .env file found and readable (279 chars)

🧪 Checking for test files...
📋 New functionality tests (5):
  • test_invitations.py
  • test_client_group_entities.py
  • test_count_apis.py
  • test_schema_changes.py
  • test_cors_comprehensive.py

📋 Regression tests (6):
  • test_users.py
  • test_client_groups.py
  • test_entities.py
  • test_entity_types.py
  • test_client_group_membership.py
  • test_valid_entities.py
✅ Found: test_invitations.py
✅ Found: test_client_group_entities.py
✅ Found: test_count_apis.py
✅ Found: test_schema_changes.py
✅ Found: test_cors_comprehensive.py
✅ Found: test_users.py
✅ Found: test_client_groups.py
✅ Found: test_entities.py
✅ Found: test_entity_types.py
✅ Found: test_client_group_membership.py
✅ Found: test_valid_entities.py

✅ All 11 test files found

🎯 Running all tests...

[1/11] Running: test_invitations.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_invitations.py::TestInvitations::test_get_invitations_by_client_group FAILED [ 22%]
  • test_invitations.py::TestInvitations::test_expire_invitation_via_redeem FAILED [ 44%]
  • test_invitations.py::TestInvitations::test_invitation_count_api FAILED   [ 55%]
  • test_invitations.py::TestInvitations::test_invitation_auto_generated_fields FAILED [ 88%]
  • test_invitations.py::TestInvitations::test_invitation_expires_at_format FAILED [100%]
  • FAILED test_invitations.py::TestInvitations::test_get_invitations_by_client_group - KeyError: 'client_group_id'
  • FAILED test_invitations.py::TestInvitations::test_expire_invitation_via_redeem - KeyError: 'expires_at'
  • FAILED test_invitations.py::TestInvitations::test_invitation_count_api - AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
  • FAILED test_invitations.py::TestInvitations::test_invitation_auto_generated_fields - AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
  • FAILED test_invitations.py::TestInvitations::test_invitation_expires_at_format - KeyError: 'expires_at'

Detailed error information:
  _____________ TestInvitations.test_get_invitations_by_client_group _____________
  test_invitations.py:53: in test_get_invitations_by_client_group
      client_group_id = invitation['client_group_id']
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   KeyError: 'client_group_id'
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  ______________ TestInvitations.test_expire_invitation_via_redeem _______________
  test_invitations.py:101: in test_expire_invitation_via_redeem
      original_expires_at = invitation['expires_at']
                            ^^^^^^^^^^^^^^^^^^^^^^^^
  E   KeyError: 'expires_at'
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  __________________ TestInvitations.test_invitation_count_api ___________________
  test_invitations.py:155: in test_invitation_count_api
      self.assert_success_response(invitation1)
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
  ... (45 more lines truncated)

[2/11] Running: test_client_group_entities.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_add_all ERROR [ 10%]
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_partial_update ERROR [ 20%]
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_empty_list ERROR [ 30%]
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_idempotent ERROR [ 40%]
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_nonexistent_entity ERROR [ 50%]
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_validation ERROR [ 60%]
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_transaction_safety ERROR [ 70%]
  • test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_cors_headers ERROR [ 80%]
  • test_client_group_entities.py::TestClientGroupEntities::test_query_client_group_entities_api ERROR [ 90%]
  • test_client_group_entities.py::TestClientGroupEntities::test_bulk_entity_operations_performance ERROR [100%]
  • ==================================== ERRORS ====================================
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_add_all _
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_partial_update _
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_empty_list _
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_idempotent _
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_nonexistent_entity _
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_validation _
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_transaction_safety _
  • _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_cors_headers _
  • _ ERROR at setup of TestClientGroupEntities.test_query_client_group_entities_api _
  • _ ERROR at setup of TestClientGroupEntities.test_bulk_entity_operations_performance _
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_add_all - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_partial_update - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_empty_list - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_idempotent - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_nonexistent_entity - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_validation - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_transaction_safety - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_modify_client_group_entities_cors_headers - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_query_client_group_entities_api - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  • ERROR test_client_group_entities.py::TestClientGroupEntities::test_bulk_entity_operations_performance - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}

Detailed error information:
  _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_add_all _
  test_client_group_entities.py:22: in setup_method
      self.test_entity_type = self.create_entity_type(
  base_test.py:301: in create_entity_type
      result = self.assert_success_response(response)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_partial_update _
  test_client_group_entities.py:22: in setup_method
      self.test_entity_type = self.create_entity_type(
  base_test.py:301: in create_entity_type
      result = self.assert_success_response(response)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Test Entity Type' for key 'entity_types.name'\")"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _ ERROR at setup of TestClientGroupEntities.test_modify_client_group_entities_empty_list _
  test_client_group_entities.py:22: in setup_method
      self.test_entity_type = self.create_entity_type(
  base_test.py:301: in create_entity_type
  ... (180 more lines truncated)

[3/11] Running: test_count_apis.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_count_apis.py::TestCountAPIs::test_entity_count_api FAILED          [  8%]
  • test_count_apis.py::TestCountAPIs::test_entity_count_with_filters FAILED [ 16%]
  • test_count_apis.py::TestCountAPIs::test_entity_type_count_api FAILED     [ 41%]
  • test_count_apis.py::TestCountAPIs::test_invitation_count_api FAILED      [ 50%]
  • FAILED test_count_apis.py::TestCountAPIs::test_entity_count_api - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Count Test Entity Type' for key 'entity_types.name'\")"}
  • FAILED test_count_apis.py::TestCountAPIs::test_entity_count_with_filters - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Filtered Count Test Type' for key 'entity_types.name'\")"}
  • FAILED test_count_apis.py::TestCountAPIs::test_entity_type_count_api - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Count Test Type 1' for key 'entity_types.name'\")"}
  • FAILED test_count_apis.py::TestCountAPIs::test_invitation_count_api - AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}

Detailed error information:
  _____________________ TestCountAPIs.test_entity_count_api ______________________
  test_count_apis.py:35: in test_entity_count_api
      entity_type = self.create_entity_type(
  base_test.py:301: in create_entity_type
      result = self.assert_success_response(response)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Count Test Entity Type' for key 'entity_types.name'\")"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _________________ TestCountAPIs.test_entity_count_with_filters _________________
  test_count_apis.py:57: in test_entity_count_with_filters
      entity_type = self.create_entity_type(
  base_test.py:301: in create_entity_type
      result = self.assert_success_response(response)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Filtered Count Test Type' for key 'entity_types.name'\")"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  ___________________ TestCountAPIs.test_entity_type_count_api ___________________
  test_count_apis.py:128: in test_entity_type_count_api
      entity_type = self.create_entity_type(
  base_test.py:301: in create_entity_type
  ... (40 more lines truncated)

[4/11] Running: test_schema_changes.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_schema_changes.py::TestSchemaChanges::test_invitations_simplified_schema FAILED [ 58%]
  • test_schema_changes.py::TestSchemaChanges::test_invitation_expiration_mechanism FAILED [ 66%]
  • test_schema_changes.py::TestSchemaChanges::test_entity_operations_with_int_user_id FAILED [ 83%]
  • FAILED test_schema_changes.py::TestSchemaChanges::test_invitations_simplified_schema - AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
  • FAILED test_schema_changes.py::TestSchemaChanges::test_invitation_expiration_mechanism - AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
  • FAILED test_schema_changes.py::TestSchemaChanges::test_entity_operations_with_int_user_id - AssertionError: Expected 200, got 500: {"error": "(1062, \"Duplicate entry 'Int User ID Test Type' for key 'entity_types.name'\")"}

Detailed error information:
  _____________ TestSchemaChanges.test_invitations_simplified_schema _____________
  test_schema_changes.py:159: in test_invitations_simplified_schema
      invitation = self.assert_success_response(response)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  ____________ TestSchemaChanges.test_invitation_expiration_mechanism ____________
  test_schema_changes.py:185: in test_invitation_expiration_mechanism
      invitation = self.assert_success_response(response)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 400: {"error": "expires_at and client_group_id are required for create action"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  __________ TestSchemaChanges.test_entity_operations_with_int_user_id ___________
  test_schema_changes.py:262: in test_entity_operations_with_int_user_id
      entity_type = self.create_entity_type(
  base_test.py:301: in create_entity_type
      result = self.assert_success_response(response)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
  ... (15 more lines truncated)

[5/11] Running: test_cors_comprehensive.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_cors_comprehensive.py::TestCORSComprehensive::test_options_preflight_all_endpoints FAILED [ 10%]
  • test_cors_comprehensive.py::TestCORSComprehensive::test_post_cors_headers_all_endpoints FAILED [ 20%]
  • test_cors_comprehensive.py::TestCORSComprehensive::test_cors_credentials_support FAILED [ 40%]
  • test_cors_comprehensive.py::TestCORSComprehensive::test_cors_all_http_methods FAILED [ 90%]
  • FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_options_preflight_all_endpoints - AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
  • FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_post_cors_headers_all_endpoints - AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
  • FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_cors_credentials_support - AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
  • FAILED test_cors_comprehensive.py::TestCORSComprehensive::test_cors_all_http_methods - AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'

Detailed error information:
  __________ TestCORSComprehensive.test_options_preflight_all_endpoints __________
  test_cors_comprehensive.py:46: in test_options_preflight_all_endpoints
      with self.subTest(endpoint=endpoint):
           ^^^^^^^^^^^^
  E   AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  __________ TestCORSComprehensive.test_post_cors_headers_all_endpoints __________
  test_cors_comprehensive.py:82: in test_post_cors_headers_all_endpoints
      with self.subTest(endpoint=endpoint):
           ^^^^^^^^^^^^
  E   AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _____________ TestCORSComprehensive.test_cors_credentials_support ______________
  test_cors_comprehensive.py:132: in test_cors_credentials_support
      with self.subTest(endpoint=endpoint):
           ^^^^^^^^^^^^
  E   AttributeError: 'TestCORSComprehensive' object has no attribute 'subTest'
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
  ... (22 more lines truncated)

[6/11] Running: test_users.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_users.py::TestUsers::test_user_update_and_revert FAILED             [ 12%]
  • test_users.py::TestUsers::test_user_create_and_delete_cycle FAILED       [ 25%]
  • test_users.py::TestUsers::test_user_get_with_filters FAILED              [ 37%]
  • test_users.py::TestUsers::test_user_update_validation FAILED             [ 50%]
  • test_users.py::TestUsers::test_user_upsert_behavior FAILED               [ 62%]
  • test_users.py::TestUsers::test_user_delete_with_constraints FAILED       [ 75%]
  • test_users.py::TestUsers::test_user_multiple_operations FAILED           [ 87%]
  • test_users.py::TestUsers::test_user_preferences_and_primary_client_group FAILED [100%]
  • FAILED test_users.py::TestUsers::test_user_update_and_revert - KeyError: 'name'
  • FAILED test_users.py::TestUsers::test_user_create_and_delete_cycle - AssertionError: Expected 1 user with ID 'test_user_20250921_110210'
  • FAILED test_users.py::TestUsers::test_user_get_with_filters - AssertionError: Expected 1 user for ID filter, got 0
  • FAILED test_users.py::TestUsers::test_user_update_validation - AssertionError: Expected 200, got 400: {"error": "sub and email are required for new users"}
  • FAILED test_users.py::TestUsers::test_user_upsert_behavior - AssertionError: User should be created
  • FAILED test_users.py::TestUsers::test_user_delete_with_constraints - AssertionError: Expected 200, got 404: {"error": "User with ID constraint_user_20250921_110218 not found"}
  • FAILED test_users.py::TestUsers::test_user_multiple_operations - AssertionError: User multi_user_0_20250921_110223 should exist with correct data
  • FAILED test_users.py::TestUsers::test_user_preferences_and_primary_client_group - AttributeError: 'TestUsers' object has no attribute 'api_call'

Detailed error information:
  ____________________ TestUsers.test_user_update_and_revert _____________________
  test_users.py:24: in test_user_update_and_revert
      original_name = test_user['name']
                      ^^^^^^^^^^^^^^^^^
  E   KeyError: 'name'
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _________________ TestUsers.test_user_create_and_delete_cycle __________________
  test_users.py:79: in test_user_create_and_delete_cycle
      assert len(
  E   AssertionError: Expected 1 user with ID 'test_user_20250921_110210'
  E   assert 0 == 1
  E    +  where 0 = len([])
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _____________________ TestUsers.test_user_get_with_filters _____________________
  test_users.py:129: in test_user_get_with_filters
      assert len(
  E   AssertionError: Expected 1 user for ID filter, got 0
  E   assert 0 == 1
  E    +  where 0 = len([])
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
  ... (114 more lines truncated)

[7/11] Running: test_client_groups.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_client_groups.py::TestClientGroups::test_client_group_create_and_delete_cycle FAILED [ 25%]
  • test_client_groups.py::TestClientGroups::test_client_group_get_with_filters FAILED [ 37%]
  • test_client_groups.py::TestClientGroups::test_client_group_get_by_user_id FAILED [ 50%]
  • test_client_groups.py::TestClientGroups::test_client_group_delete_with_constraints FAILED [ 75%]
  • test_client_groups.py::TestClientGroups::test_client_group_multiple_operations FAILED [ 87%]
  • test_client_groups.py::TestClientGroups::test_client_group_preferences FAILED [100%]
  • FAILED test_client_groups.py::TestClientGroups::test_client_group_create_and_delete_cycle - AssertionError: Expected at least 1 group with name 'CLIENT_GROUP_20250921_110231'
  • FAILED test_client_groups.py::TestClientGroups::test_client_group_get_with_filters - AssertionError: Expected at least 1 group for name filter, got 0
  • FAILED test_client_groups.py::TestClientGroups::test_client_group_get_by_user_id - AssertionError: Expected at least 1 group for user, got 0
  • FAILED test_client_groups.py::TestClientGroups::test_client_group_delete_with_constraints - AssertionError: Expected 200, got 409: {"error": "Cannot delete record due to referential integrity constraints", "details": ["1 user(s) are assigned to this client group"]}
  • FAILED test_client_groups.py::TestClientGroups::test_client_group_multiple_operations - AssertionError: Group 418 with name MULTI_TEST_0_20250921_110245 should exist
  • FAILED test_client_groups.py::TestClientGroups::test_client_group_preferences - AttributeError: 'TestClientGroups' object has no attribute 'api_call'

Detailed error information:
  __________ TestClientGroups.test_client_group_create_and_delete_cycle __________
  test_client_groups.py:74: in test_client_group_create_and_delete_cycle
      assert len(
  E   AssertionError: Expected at least 1 group with name 'CLIENT_GROUP_20250921_110231'
  E   assert 0 >= 1
  E    +  where 0 = len([])
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _____________ TestClientGroups.test_client_group_get_with_filters ______________
  test_client_groups.py:125: in test_client_group_get_with_filters
      assert len(
  E   AssertionError: Expected at least 1 group for name filter, got 0
  E   assert 0 >= 1
  E    +  where 0 = len([])
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  ______________ TestClientGroups.test_client_group_get_by_user_id _______________
  test_client_groups.py:175: in test_client_group_get_by_user_id
      assert len(
  E   AssertionError: Expected at least 1 group for user, got 0
  E   assert 0 >= 1
  E    +  where 0 = len([])
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  ... (72 more lines truncated)

[8/11] Running: test_entities.py
----------------------------------------
Exit code: 1
❌ FAILED

--- DETAILED FAILURE OUTPUT ---
Failed test cases:
  • test_entities.py::TestEntities::test_entity_update_and_revert FAILED     [ 16%]
  • test_entities.py::TestEntities::test_entity_create_and_delete_cycle FAILED [ 33%]
  • test_entities.py::TestEntities::test_entity_get_with_filters FAILED      [ 50%]
  • test_entities.py::TestEntities::test_entity_attributes_operations FAILED [ 83%]
  • test_entities.py::TestEntities::test_entity_multiple_operations FAILED   [100%]
  • FAILED test_entities.py::TestEntities::test_entity_update_and_revert - AssertionError: Expected 200, got 502: {"message": "Internal server error"}
  • FAILED test_entities.py::TestEntities::test_entity_create_and_delete_cycle - AssertionError: Expected 200, got 502: {"message": "Internal server error"}
  • FAILED test_entities.py::TestEntities::test_entity_get_with_filters - AssertionError: Expected at least 1 entity for name filter, got 0
  • FAILED test_entities.py::TestEntities::test_entity_attributes_operations - AssertionError: Expected 200, got 400: {"error": "user_id is required for data protection"}
  • FAILED test_entities.py::TestEntities::test_entity_multiple_operations - AssertionError: Entity 629 with name MULTI_ENTITY_0_20250921_110357 should exist

Detailed error information:
  __________________ TestEntities.test_entity_update_and_revert __________________
  test_entities.py:18: in test_entity_update_and_revert
      entity_types = self.get_entity_types()
                     ^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:310: in get_entity_types
      result = self.assert_success_response(response)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 502: {"message": "Internal server error"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  _______________ TestEntities.test_entity_create_and_delete_cycle _______________
  test_entities.py:94: in test_entity_create_and_delete_cycle
      entity_types = self.get_entity_types()
                     ^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:310: in get_entity_types
      result = self.assert_success_response(response)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  base_test.py:152: in assert_success_response
      assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  E   AssertionError: Expected 200, got 502: {"message": "Internal server error"}
  ---------------------------- Captured stdout setup -----------------------------
  🔧 Setting up test environment...
     📝 Loading configuration...
     🌐 Configuring AWS client...
     📋 Initializing tracking lists...
     🔐 Authenticating...
  🔐 Authenticating with AWS Cognito...
     Trying ADMIN_NO_SRP_AUTH flow...
     ✅ Authentication successful
     👤 Getting test user ID...
  🔍 Looking up test user ID...
     ✅ Found test user ID: 10
     ✅ Test setup completed successfully
  __________________ TestEntities.test_entity_get_with_filters ___________________
  test_entities.py:179: in test_entity_get_with_filters
  ... (58 more lines truncated)

[9/11] Running: test_entity_types.py
----------------------------------------
